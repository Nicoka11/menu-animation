{"id":"C:/Users/nicok/AppData/Roaming/npm/node_modules/parcel-bundler/node_modules/asn1.js/lib/asn1/decoders/pem.js","dependencies":[{"name":"G:\\Z - Web Training\\menu-animation\\package.json","includedInParent":true,"mtime":1619633306767},{"name":"C:\\Users\\nicok\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\asn1.js\\package.json","includedInParent":true,"mtime":1610635478598},{"name":"inherits","loc":{"line":3,"column":25},"parent":"C:\\Users\\nicok\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\asn1.js\\lib\\asn1\\decoders\\pem.js","resolved":"C:\\Users\\nicok\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\inherits\\inherits_browser.js"},{"name":"safer-buffer","loc":{"line":4,"column":23},"parent":"C:\\Users\\nicok\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\asn1.js\\lib\\asn1\\decoders\\pem.js","resolved":"C:\\Users\\nicok\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\safer-buffer\\safer.js"},{"name":"./der","loc":{"line":6,"column":27},"parent":"C:\\Users\\nicok\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\asn1.js\\lib\\asn1\\decoders\\pem.js","resolved":"C:\\Users\\nicok\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\asn1.js\\lib\\asn1\\decoders\\der.js"}],"generated":{"js":"\n'use strict';\n\nconst inherits = require('inherits');\nconst Buffer = require('safer-buffer').Buffer;\n\nconst DERDecoder = require('./der');\n\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n}\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\n\nPEMDecoder.prototype.decode = function decode(data, options) {\n  const lines = data.toString().split(/[\\r\\n]+/g);\n\n  const label = options.label.toUpperCase();\n\n  const re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  let start = -1;\n  let end = -1;\n  for (let i = 0; i < lines.length; i++) {\n    const match = lines[i].match(re);\n    if (match === null)\n      continue;\n\n    if (match[2] !== label)\n      continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN')\n        break;\n      start = i;\n    } else {\n      if (match[1] !== 'END')\n        break;\n      end = i;\n      break;\n    }\n  }\n  if (start === -1 || end === -1)\n    throw new Error('PEM section not found for: ' + label);\n\n  const base64 = lines.slice(start + 1, end).join('');\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9+/=]+/gi, '');\n\n  const input = Buffer.from(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};\n"},"sourceMaps":null,"error":null,"hash":"5ba95b6526dabb7c8c0b50364653a46b","cacheData":{"env":{}}}