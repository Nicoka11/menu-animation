{"id":"C:/Users/nicok/AppData/Roaming/npm/node_modules/parcel-bundler/node_modules/des.js/lib/des/cbc.js","dependencies":[{"name":"G:\\Z - Web Training\\menu-animation\\package.json","includedInParent":true,"mtime":1619633306767},{"name":"C:\\Users\\nicok\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\des.js\\package.json","includedInParent":true,"mtime":1610635478895},{"name":"minimalistic-assert","loc":{"line":3,"column":21},"parent":"C:\\Users\\nicok\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\des.js\\lib\\des\\cbc.js","resolved":"C:\\Users\\nicok\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\minimalistic-assert\\index.js"},{"name":"inherits","loc":{"line":4,"column":23},"parent":"C:\\Users\\nicok\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\des.js\\lib\\des\\cbc.js","resolved":"C:\\Users\\nicok\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\inherits\\inherits_browser.js"}],"generated":{"js":"'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar proto = {};\n\nfunction CBCState(iv) {\n  assert.equal(iv.length, 8, 'Invalid IV length');\n\n  this.iv = new Array(8);\n  for (var i = 0; i < this.iv.length; i++)\n    this.iv[i] = iv[i];\n}\n\nfunction instantiate(Base) {\n  function CBC(options) {\n    Base.call(this, options);\n    this._cbcInit();\n  }\n  inherits(CBC, Base);\n\n  var keys = Object.keys(proto);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    CBC.prototype[key] = proto[key];\n  }\n\n  CBC.create = function create(options) {\n    return new CBC(options);\n  };\n\n  return CBC;\n}\n\nexports.instantiate = instantiate;\n\nproto._cbcInit = function _cbcInit() {\n  var state = new CBCState(this.options.iv);\n  this._cbcState = state;\n};\n\nproto._update = function _update(inp, inOff, out, outOff) {\n  var state = this._cbcState;\n  var superProto = this.constructor.super_.prototype;\n\n  var iv = state.iv;\n  if (this.type === 'encrypt') {\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] ^= inp[inOff + i];\n\n    superProto._update.call(this, iv, 0, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = out[outOff + i];\n  } else {\n    superProto._update.call(this, inp, inOff, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      out[outOff + i] ^= iv[i];\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = inp[inOff + i];\n  }\n};\n"},"sourceMaps":null,"error":null,"hash":"4c7e51fd0cfecbdd1c14e59ab537cd43","cacheData":{"env":{}}}